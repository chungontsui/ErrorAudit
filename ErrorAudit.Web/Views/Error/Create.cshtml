@model ErrorAudit.DataAccess.ViewModel.ErrorViewModel

@{ 
	Html.RenderPartial("Index");
}


@using (Html.BeginForm("Create", "Error", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	//SelectList errorTypeList = ViewBag.ErrorTypes;
	var _updatingError = ViewBag.updatingError;
	var _label = _updatingError == null ? "" : _updatingError.Code;
	var _description = _updatingError == null ? "" : _updatingError.Description;

	var _errorType = ViewBag.ErrorTypes as IEnumerable<SelectListItem>;
	if (_updatingError != null)
	{
		foreach (SelectListItem errorType in _errorType)
		{
			if (_updatingError.ErrorType.ToString() == errorType.Value)
			{
				errorType.Selected = true;
			}
		}
	}

		@Html.AntiForgeryToken()

		<div class="form-group">
			@Html.LabelFor(m => m.Code, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.TextBoxFor(m => m.Code, new { @class = "form-control" })

			</div>
		</div>
		@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" });
		<div class="form-group">
			@Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
			</div>
		</div>
		@Html.ValidationSummary("", new { @class = "text-danger" })
		<div class="form-group">
			@Html.Label("Error Type", new { @class = "col-md-2 control-label" })
			<div class="col-md-10">
				@Html.DropDownList("ErrorType", _errorType, new { @class = "form-control" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" class="btn btn-default" value="Add New Error" />
			</div>
		</div>
		}

